{"meta":{"title":"Dragon Lab","subtitle":"天地所以能长且久者，以其不自生，故能长生。","description":null,"author":"Dragon","url":"http://dragon-lab.github.io"},"pages":[{"title":"","date":"2018-05-04T04:34:40.000Z","updated":"2018-05-04T04:34:40.000Z","comments":false,"path":"tags/index.html","permalink":"http://dragon-lab.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"使用Privoxy给ShadowSocks设置Http代理","slug":"using-privoxy-with-http-proxy-for-shadowsocks","date":"2018-05-04T06:04:46.000Z","updated":"2018-05-04T14:19:19.000Z","comments":true,"path":"2018/05/04/using-privoxy-with-http-proxy-for-shadowsocks/","link":"","permalink":"http://dragon-lab.github.io/2018/05/04/using-privoxy-with-http-proxy-for-shadowsocks/","excerpt":"","text":"实践证明，直接用 Privoxy 作代理要比用Chrome代理插件网速快。 安装 去 Privoxy 官网 下载安装包安装 当然别忘了打开 ShadowSocks 配置 编辑配置文件 /usr/local/etc/privoxy/config 找到socks5 那一段，在后面添加 1forward-socks5 / 127.0.0.1:1080 . 如果你想修改http代理的端口，找到这一段并修改（默认是8118） 1listen-address 127.0.0.1:8118 启动 然后重启Privoxy /Application/Privoxy/stopPrivoxy.sh /Application/Privoxy/startPrivoxy.sh","categories":[],"tags":[]},{"title":"ElasticSearch","slug":"ElasticSearch","date":"2017-02-15T09:34:58.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/15/ElasticSearch/","link":"","permalink":"http://dragon-lab.github.io/2017/02/15/ElasticSearch/","excerpt":"","text":"安装配置数据同步性能测试","categories":[],"tags":[]},{"title":"生活感想","slug":"Life-feeling","date":"2017-02-09T09:30:52.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/09/Life-feeling/","link":"","permalink":"http://dragon-lab.github.io/2017/02/09/Life-feeling/","excerpt":"","text":"随着渐渐的长大，逐渐明白世界上并没有坏人，但是会有无尽的执念，活在执念中的人是痛苦的。必须要有相应的胸襟、气度、修为、见识去调和。 不管工作多忙，一定要找到一件可以让自己开心的事，坚持做下去，哪怕仅仅占用了1%的时间，也是至关重要的。它可以在关键的时候陪你走过沮丧、失败、痛苦。 懂技术的人不一定可以天长地久，但是懂生活的人可以。 在吃“初色”的时候我忽然想到，如果长征的时候，每个人都可以吃到这样的美味，是否还可以走得完两万五千里长征。少数人的雄心宏图不一定可以改变历史的轨迹，但大多数人的生活一定可以影响历史的轨迹。 懂得生活、懂得快乐，方能长久。 “忍辱”的意义在于体会”无我” 有时候我会去想，为什么一定会有少部分的人去忍受，有没有一种合理的方式，可以顾全大部分人的利益，但似乎每一次都找不到答案，每一次的变动都一定会带来一些意想不到的东西。 如无必要，勿增实体。 勤修行，少用神通。 心自在，方容天下。 窥一斑而知全豹，为上等人。见豹而知豹，为中等人。见豹而不自知，非有心之过，不知者不怪，切莫轻易责于人而。 知对而行便是善，知错而行便是恶。善恶不在于心，而见于行。","categories":[],"tags":[{"name":"随笔","slug":"随笔","permalink":"http://dragon-lab.github.io/tags/随笔/"}]},{"title":"Apache TinkerPop","slug":"Apache-Tinkerpop","date":"2017-02-08T06:13:03.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/08/Apache-Tinkerpop/","link":"","permalink":"http://dragon-lab.github.io/2017/02/08/Apache-Tinkerpop/","excerpt":"","text":"图是顶点（即节点、点）和边（即关系、线）的集合，其中顶点是表示某个域对象的实体（例如一个人、一个地方等），边代表两个顶点之间的关系。 TinkerPop是一个开源的图数据库程序的开发框架。Mallette回复了一个帖子说明了了TinkerPop不是一种编写图应用程序的规范或标准。TinkerPop仅仅提供一系列的接口，图数据库和数据库供应商可以实现（Blueprints），获得TinkerPop的其余特性，支持基于图的应用程序开发。 TinkerPop 资料http://umlg.org/sqlg.html TinkerPop 入门Gremlin Console下载Gremlin Console 1234567891011$ unzip apache-tinkerpop-gremlin-console-3.2.3-bin.zip$ cd apache-tinkerpop-gremlin-console-3.2.3/$ apache-tinkerpop-gremlin-console-3.2.3 bin/gremlin.sh \\,,,/ (o o)-----oOOo-(3)-oOOo-----plugin activated: tinkerpop.serverplugin activated: tinkerpop.utilitiesplugin activated: tinkerpop.tinkergraphgremlin&gt; 简单遍历使用Gremlin Console创建一个下面这样的图 使用下面的命令在Gremlin Console中实例化 创建了一个graph的图实例，仅仅提供了图的一些基本操作和数据。 12gremlin&gt; graph = TinkerFactory.createModern()==&gt;tinkergraph[vertices:6 edges:6] 还需要一个TraversalSource提供了额外的操作，例如遍历策略。 123gremlin&gt; g = graph.traversal()==&gt;graphtraversalsource[tinkergraph[vertices:6 edges:6], standard]gremlin&gt; 获取所有顶点 1234567gremlin&gt; g.V()==&gt;v[1]==&gt;v[2]==&gt;v[3]==&gt;v[4]==&gt;v[5]==&gt;v[6] 获取id=1的顶点 12gremlin&gt; g.V(1)==&gt;v[1] 获取id=1的顶点 name 属性的值 12gremlin&gt; g.V(1).values(&apos;name&apos;)==&gt;marko 获取id=1的订单的所有指向节点，且包含标签knows的边 123gremlin&gt; g.V(1).outE(&apos;knows&apos;)==&gt;e[7][1-knows-&gt;2]==&gt;e[8][1-knows-&gt;4] 获取id=1的订单的所有指向节点，且包含标签knows的边指向顶点的 name 属性的值 123gremlin&gt; g.V(1).outE(&apos;knows&apos;).inV().values(&apos;name&apos;)==&gt;vadas==&gt;josh .out() == .outE().inV() 123gremlin&gt; g.V(1).out(&apos;knows&apos;).values(&apos;name&apos;)==&gt;vadas==&gt;josh 获取id=1的订单的所有指向节点，且包含标签knows的边指向的顶点，且age &gt; 30的顶点的 name 属性的值 12gremlin&gt; g.V(1).out(&apos;knows&apos;).has(&apos;age&apos;, gt(30)).values(&apos;name&apos;)==&gt;josh 复杂遍历12345678910111213141516171819202122232425gremlin&gt; graph = TinkerFactory.createModern()==&gt;tinkergraph[vertices:6 edges:6]gremlin&gt; g = graph.traversal()==&gt;graphtraversalsource[tinkergraph[vertices:6 edges:6], standard]gremlin&gt; g.V().has(&apos;name&apos;,within(&apos;vadas&apos;,&apos;marko&apos;)).values(&apos;age&apos;)==&gt;29==&gt;27gremlin&gt; g.V().has(&apos;name&apos;,within(&apos;vadas&apos;,&apos;marko&apos;)).values(&apos;age&apos;).mean()==&gt;28.0gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).out(&apos;created&apos;)==&gt;v[3]gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).out(&apos;created&apos;).in(&apos;created&apos;).values(&apos;name&apos;)==&gt;marko==&gt;josh==&gt;petergremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).as(&apos;exclude&apos;).out(&apos;created&apos;).in(&apos;created&apos;).where(neq(&apos;exclude&apos;)).values(&apos;name&apos;)==&gt;josh==&gt;petergremlin&gt; g.V().as(&apos;a&apos;).out().as(&apos;b&apos;).out().as(&apos;c&apos;).select(&apos;a&apos;,&apos;b&apos;,&apos;c&apos;)==&gt;[a:v[1],b:v[4],c:v[5]]==&gt;[a:v[1],b:v[4],c:v[3]]gremlin&gt; g.V().group().by(label)==&gt;[software:[v[3],v[5]],person:[v[1],v[2],v[4],v[6]]]gremlin&gt; g.V().group().by(label).by(&apos;name&apos;)==&gt;[software:[lop,ripple],person:[marko,vadas,josh,peter]] 创建一个图 上图展示了一个包含两个顶点的图，分别是id=1，id=3。边的id=9，并且边有个方向1-&gt;3。 只有顶点和边的图，并没有什么意义，所以接下来我们给这些顶点和边赋予一些业务上的含义。 还可以给这些实体增加一些标签 这种模式可以直观的表示数据，使用下面的命令来创建这个图： 12345678gremlin&gt; graph = TinkerGraph.open()==&gt;tinkergraph[vertices:0 edges:0]gremlin&gt; v1 = graph.addVertex(T.id, 1, T.label, &quot;person&quot;, &quot;name&quot;, &quot;marko&quot;, &quot;age&quot;, 29)==&gt;v[1]gremlin&gt; v2 = graph.addVertex(T.id, 3, T.label, &quot;software&quot;, &quot;name&quot;, &quot;lop&quot;, &quot;lang&quot;, &quot;java&quot;)==&gt;v[3]gremlin&gt; v1.addEdge(&quot;created&quot;, v2, T.id, 9, &quot;weight&quot;, 0.4)==&gt;e[9][1-created-&gt;3] T.id 和 T.label 是保留关键字，可以将T看做一个静态变量。 遍历自己的图123456789101112gremlin&gt; g = graph.traversal();==&gt;graphtraversalsource[tinkergraph[vertices:2 edges:1], standard]gremlin&gt; g.V().has(&quot;name&quot;, &quot;marko&quot;)==&gt;v[1]gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).outE(&apos;created&apos;)==&gt;e[9][1-created-&gt;3]gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).outE(&apos;created&apos;).inV()==&gt;v[3]gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).out(&apos;created&apos;)==&gt;v[3]gremlin&gt; g.V().has(&apos;name&apos;,&apos;marko&apos;).out(&apos;created&apos;).values(&apos;name&apos;)==&gt;lop 加载数据12$ curl -L -O http://snap.stanford.edu/data/wiki-Vote.txt.gz$ gunzip wiki-Vote.txt.gz 123456789101112131415graph = TinkerGraph.open()graph.createIndex('userId', Vertex.class) (1)g = graph.traversal()getOrCreate = &#123; id -&gt; g.V().has('userId', id).tryNext().orElseGet&#123; g.addV('userId', id).next() &#125;&#125;new File('wiki-Vote.txt').eachLine &#123; if (!it.startsWith(\"#\"))&#123; (fromVertex, toVertex) = it.split('\\t').collect(getOrCreate) (2) fromVertex.addEdge('votesFor', toVertex) &#125;&#125; &#125; &#125; 在Gremlin Console里的运行结果如下： 1234567891011121314151617181920212223242526➜ apache-tinkerpop-gremlin-console-3.2.3 bin/gremlin.sh \\,,,/ (o o)-----oOOo-(3)-oOOo-----plugin activated: tinkerpop.serverplugin activated: tinkerpop.utilitiesplugin activated: tinkerpop.tinkergraphgremlin&gt; graph = TinkerGraph.open()==&gt;tinkergraph[vertices:0 edges:0]gremlin&gt; graph.createIndex(&apos;userId&apos;, Vertex.class)==&gt;nullgremlin&gt; g = graph.traversal()==&gt;graphtraversalsource[tinkergraph[vertices:0 edges:0], standard]gremlin&gt;gremlin&gt; getOrCreate = &#123; id -&gt;......1&gt; g.V().has(&apos;userId&apos;, id).tryNext().orElseGet&#123; g.addV(&apos;userId&apos;, id).next() &#125;......2&gt; &#125;==&gt;groovysh_evaluate$_run_closure1@323e8306gremlin&gt; new File(&apos;../wiki-Vote.txt&apos;).eachLine &#123;......1&gt; if (!it.startsWith(&quot;#&quot;))&#123;......2&gt; (fromVertex, toVertex) = it.split(&apos;\\t&apos;).collect(getOrCreate)......3&gt; fromVertex.addEdge(&apos;votesFor&apos;, toVertex)......4&gt; &#125;......5&gt; &#125;==&gt;e[117918][117916-votesFor-&gt;44907] &#125; &#125; 首先为了快速查询节点，建立索引 在wiki-Vote.txt的每一行使用\\t区分from、to顶点 加载更大的数据集，建议阅读BulkLoaderVertexProgram(BLVP)，提供了一种可以加载任意大小数据的方法。 Gremlin Server下载Gremlin Server 12345678910111213141516171819202122232425262728293031323334$ unzip apache-tinkerpop-gremlin-server-3.2.3-bin.zip$ cd apache-tinkerpop-gremlin-server-3.2.3$ bin/gremlin-server.sh[INFO] GremlinServer - \\,,,/ (o o)-----oOOo-(3)-oOOo-----[INFO] GremlinServer - Configuring Gremlin Server from conf/gremlin-server.yaml[INFO] MetricManager - Configured Metrics ConsoleReporter configured with report interval=180000ms[INFO] MetricManager - Configured Metrics CsvReporter configured with report interval=180000ms to fileName=/tmp/gremlin-server-metrics.csv[INFO] MetricManager - Configured Metrics JmxReporter configured with domain= and agentId=[INFO] MetricManager - Configured Metrics Slf4jReporter configured with interval=180000ms and loggerName=org.apache.tinkerpop.gremlin.server.Settings$Slf4jReporterMetrics[INFO] GraphManager - Graph [graph] was successfully configured via [conf/tinkergraph-empty.properties].[INFO] ServerGremlinExecutor - Initialized Gremlin thread pool. Threads in pool named with pattern gremlin-*[INFO] ScriptEngines - Loaded gremlin-groovy ScriptEngine[INFO] GremlinExecutor - Initialized gremlin-groovy ScriptEngine with scripts/empty-sample.groovy[INFO] ServerGremlinExecutor - Initialized GremlinExecutor and configured ScriptEngines.[INFO] ServerGremlinExecutor - A GraphTraversalSource is now bound to [g] with graphtraversalsource[tinkergraph[vertices:0 edges:0], standard][INFO] OpLoader - Adding the standard OpProcessor.[INFO] OpLoader - Adding the control OpProcessor.[INFO] OpLoader - Adding the session OpProcessor.[INFO] OpLoader - Adding the traversal OpProcessor.[INFO] TraversalOpProcessor - Initialized cache for TraversalOpProcessor with size 1000 and expiration time of 600000 ms[INFO] GremlinServer - Executing start up LifeCycleHook[INFO] Logger$info - Executed once at startup of Gremlin Server.[INFO] AbstractChannelizer - Configured application/vnd.gremlin-v1.0+gryo with org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0[INFO] AbstractChannelizer - Configured application/vnd.gremlin-v1.0+gryo-lite with org.apache.tinkerpop.gremlin.driver.ser.GryoLiteMessageSerializerV1d0[INFO] AbstractChannelizer - Configured application/vnd.gremlin-v1.0+gryo-stringd with org.apache.tinkerpop.gremlin.driver.ser.GryoMessageSerializerV1d0[INFO] AbstractChannelizer - Configured application/vnd.gremlin-v1.0+json with org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerGremlinV1d0[INFO] AbstractChannelizer - Configured application/vnd.gremlin-v2.0+json with org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerGremlinV2d0[INFO] AbstractChannelizer - Configured application/json with org.apache.tinkerpop.gremlin.driver.ser.GraphSONMessageSerializerV1d0[INFO] GremlinServer$1 - Gremlin Server configured with worker thread pool of 1, gremlin pool of 4 and boss thread pool of 1.[INFO] GremlinServer$1 - Channel started at port 8182. TinkerPop 高级功能TinkerPop 2TinkerPop 2中的组件和TinkerPop 3的对应关系 Blueprints → Gremlin Structure APIPipes → GraphTraversalFrames → TraversalFurnace → GraphComputer and VertexProgramRexster → GremlinServer Features查看TinkerPop支持的features 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102gremlin&gt; graph = TinkerGraph.open()==&gt;tinkergraph[vertices:0 edges:0]gremlin&gt; graph.features()==&gt;FEATURES&gt; GraphFeatures&gt;-- Persistence: true&gt;-- ConcurrentAccess: false&gt;-- ThreadedTransactions: false&gt;-- Transactions: false&gt;-- Computer: true&gt; VariableFeatures&gt;-- Variables: true&gt;-- FloatValues: true&gt;-- IntegerValues: true&gt;-- LongValues: true&gt;-- MapValues: true&gt;-- MixedListValues: true&gt;-- SerializableValues: true&gt;-- StringValues: true&gt;-- UniformListValues: true&gt;-- BooleanArrayValues: true&gt;-- ByteArrayValues: true&gt;-- DoubleArrayValues: true&gt;-- FloatArrayValues: true&gt;-- IntegerArrayValues: true&gt;-- LongArrayValues: true&gt;-- StringArrayValues: true&gt;-- BooleanValues: true&gt;-- ByteValues: true&gt;-- DoubleValues: true&gt; VertexFeatures&gt;-- RemoveVertices: true&gt;-- MultiProperties: true&gt;-- AddVertices: true&gt;-- MetaProperties: true&gt;-- AddProperty: true&gt;-- RemoveProperty: true&gt;-- NumericIds: true&gt;-- StringIds: true&gt;-- UuidIds: true&gt;-- CustomIds: false&gt;-- AnyIds: true&gt;-- UserSuppliedIds: true&gt; VertexPropertyFeatures&gt;-- AddProperty: true&gt;-- RemoveProperty: true&gt;-- NumericIds: true&gt;-- StringIds: true&gt;-- UuidIds: true&gt;-- CustomIds: false&gt;-- AnyIds: true&gt;-- UserSuppliedIds: true&gt;-- Properties: true&gt;-- FloatValues: true&gt;-- IntegerValues: true&gt;-- LongValues: true&gt;-- MapValues: true&gt;-- MixedListValues: true&gt;-- SerializableValues: true&gt;-- StringValues: true&gt;-- UniformListValues: true&gt;-- BooleanArrayValues: true&gt;-- ByteArrayValues: true&gt;-- DoubleArrayValues: true&gt;-- FloatArrayValues: true&gt;-- IntegerArrayValues: true&gt;-- LongArrayValues: true&gt;-- StringArrayValues: true&gt;-- BooleanValues: true&gt;-- ByteValues: true&gt;-- DoubleValues: true&gt; EdgeFeatures&gt;-- AddEdges: true&gt;-- RemoveEdges: true&gt;-- AddProperty: true&gt;-- RemoveProperty: true&gt;-- NumericIds: true&gt;-- StringIds: true&gt;-- UuidIds: true&gt;-- CustomIds: false&gt;-- AnyIds: true&gt;-- UserSuppliedIds: true&gt; EdgePropertyFeatures&gt;-- Properties: true&gt;-- FloatValues: true&gt;-- IntegerValues: true&gt;-- LongValues: true&gt;-- MapValues: true&gt;-- MixedListValues: true&gt;-- SerializableValues: true&gt;-- StringValues: true&gt;-- UniformListValues: true&gt;-- BooleanArrayValues: true&gt;-- ByteArrayValues: true&gt;-- DoubleArrayValues: true&gt;-- FloatArrayValues: true&gt;-- IntegerArrayValues: true&gt;-- LongArrayValues: true&gt;-- StringArrayValues: true&gt;-- BooleanValues: true&gt;-- ByteValues: true&gt;-- DoubleValues: true TinkerPop 存储TinkerGraphTinkerGraph (TinkerGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-core&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; Neo4jNeo4j Implementation (Neo4jGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-neo4j-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; 或者 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-neo4j2-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; Neo4jHANeo4jHA Implementation (Neo4jHaGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-neo4j-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; Neo4jBatchNeo4jBatch Implementation (Neo4jBatchGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-neo4jbatch-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; SailSail Implementation (SailGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-sail-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; SparkseeSparksee Implementation (SparkseeGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-sparksee-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; RexsterRexster Implementation (RexsterGraph) 12345&lt;dependency&gt; &lt;groupId&gt;com.tinkerpop.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-rexster-graph&lt;/artifactId&gt; &lt;version&gt;??&lt;/version&gt;&lt;/dependency&gt; AccumuloAccumulo Implementation (AccumuloGraph – 3rd party – implements Blueprints 2.4.0) 12345&lt;dependency&gt; &lt;groupId&gt;edu.jhuapl.tinkerpop&lt;/groupId&gt; &lt;artifactId&gt;blueprints-accumulo-graph&lt;/artifactId&gt; &lt;version&gt;0.2.1&lt;/version&gt;&lt;/dependency&gt; ArangoDBArangoDB Implementation (ArangoDBGraph – 3rd party – implements Blueprints 2.3.0) 12345&lt;dependency&gt; &lt;groupId&gt;com.arangodb&lt;/groupId&gt; &lt;artifactId&gt;blueprints-arangodb-graph&lt;/artifactId&gt; &lt;version&gt;1.0.15&lt;/version&gt;&lt;/dependency&gt; BitsyBitsy (BitsyGraph – 3rd party – implements Blueprints 2.4.0) 12345&lt;dependency&gt; &lt;groupId&gt;com.lambdazen.bitsy&lt;/groupId&gt; &lt;artifactId&gt;bitsy&lt;/artifactId&gt; &lt;version&gt;1.5.2&lt;/version&gt;&lt;/dependency&gt; BigdataBigdata (BigdataGraph – 3rd party – implements Blueprints 2.5.0) FluxGraphFluxGraph - Datomic Implementation (FluxGraph – 3rd party – implements Blueprints 2.1.0) FoundationDBFoundationDB Implementation (FoundationDBGraph – 3rd party – implements Blueprints 2.4.0) InfiniteGraphInfiniteGraph Implementation (IGGraph – 3rd party – implements Blueprints 2.1.0) JPAJPA Implementation (JpaGraph – 3rd party – implements Blueprints 2.5.0) 123456&lt;dependency&gt; &lt;groupId&gt;com.wingnest.blueprints&lt;/groupId&gt; &lt;artifactId&gt;blueprints-jpa-graph&lt;/artifactId&gt; &lt;version&gt;2.5.0_01&lt;/version&gt;&lt;/dependency&gt;Repository: http://www.wingnest.com/mvn-repo/ MongoDBMongoDB Implementation (MongoDBGraph – 3rd party – implements Blueprints 2.3.0) Oracle NoSQLOracle NoSQL Implementation (KVGraph – 3rd party – implements Blueprints 2.1.0) OrientDBOrientDB Implementation (OrientGraph – 3rd party – implements Blueprints 2.4.0) SQL/JDBCSQL/JDBC Implementation – 3rd party – implements Blueprints 2.4.0) TitanTitan Implementation (TitanGraph – 3rd party – implements Blueprints 2.3.0)","categories":[],"tags":[]},{"title":"Apache Camel的一些经验","slug":"Learning-Apache-Camel","date":"2017-02-07T03:39:17.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/07/Learning-Apache-Camel/","link":"","permalink":"http://dragon-lab.github.io/2017/02/07/Learning-Apache-Camel/","excerpt":"","text":"","categories":[],"tags":[{"name":"Java","slug":"Java","permalink":"http://dragon-lab.github.io/tags/Java/"}]},{"title":"LFS 安装过程","slug":"Linux-From-Scratch","date":"2017-02-07T03:37:56.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/07/Linux-From-Scratch/","link":"","permalink":"http://dragon-lab.github.io/2017/02/07/Linux-From-Scratch/","excerpt":"","text":"从2012年开始，每年都会找个时间编译下LFS，从Linux小白到现在，每次编译LFS都会对Linux有很多新的认识。","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://dragon-lab.github.io/tags/Linux/"}]},{"title":"Ansible 学习笔记","slug":"Learning-Ansible","date":"2017-02-07T03:02:07.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/07/Learning-Ansible/","link":"","permalink":"http://dragon-lab.github.io/2017/02/07/Learning-Ansible/","excerpt":"","text":"","categories":[],"tags":[{"name":"运维","slug":"运维","permalink":"http://dragon-lab.github.io/tags/运维/"}]},{"title":"Virtualbox 虚拟集群搭建","slug":"VBox-Cluster","date":"2017-02-07T02:46:42.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/07/VBox-Cluster/","link":"","permalink":"http://dragon-lab.github.io/2017/02/07/VBox-Cluster/","excerpt":"","text":"需求环境说明环境搭建gatewaygateway 用作整个集群内网和外部网络的交互入口，需要设置3块网卡。分别用于： gateway机器自身访问外网 直接访问gateway，方便登录集群机器 集群内部网络通讯 下面使用nmtui命令，设置主机名和网络。 设置主机名 激活网卡 设置网卡 设置gateway的内网ip地址为10.0.0.1 系统更新 1$ yum update -y SNAT 网关禁用firewalld，至于为啥因为我还不会用firewalld。 12345$ systemctl status firewalld$ systemctl stop firewalld$ systemctl disable firewalld 安装 iptables 12345$ yum install -y iptables.x86_64 iptables-services.x86_64$ systemctl start iptables$ systemctl status iptables 开启ip转发 123$ echo \"net.ipv4.ip_forward = 1\" &gt;&gt; /etc/sysctl.conf$ iptables -t nat -A POSTROUTING -s 10.0.0.0/8 -j SNAT --to &lt;gateway ip&gt; 开放10.0.0.0/8网段访问限制 12$ iptables -I FORWARD -s 10.0.0.0/8 -j ACCEPT$ iptables -I FORWARD -d 10.0.0.0/8 -j ACCEPT 保存重启iptables 12345$ iptables-save &gt; /etc/sysconfig/iptables$ systemctl restart iptables$ systemctl status iptables DNS安装dnsmasq 1$ yum install -y dnsmasq.x86_64 使用iptables开放端口 12$ iptables -I INPUT -p udp -m udp --sport 53 -j ACCEPT$ iptables -I INPUT -p udp -m udp --dport 53 -j ACCEPT yum repodocker mirror常用操作优化启动集群startvm1234567891011121314#!/bin/bashvms=`VBoxManage list vms | grep $1 | awk '&#123;print $1&#125;'`for vm in $vms; do vm=`echo \"$vm\" | sed 's/\"//g'` case \"$2\" in 'console') VBoxManage startvm $vm ;; *) VBoxManage startvm $vm --type headless ;; esacdone 创建集群clonevm12345678910111213#!/bin/bashname=$1num=$2if [ \"x$num\" != \"x\" ]; then for i in `seq $num`; do vmname=\"node$i.$name.serve\" VBoxManage clonevm template --mode all --name $vmname --register doneelse VBoxManage clonevm template --mode all --name $name --registerf 网络设置常用工具vim安装vim 1$ yum install -y vim-enhanced.x86_64 安装vim需要的依赖 123$ yum install -y git.x86_64 python2-pip.noarch ctags.x86_64$ pip install dbgp vim-debug pep8 flake8 pyflakes isort .vimrc123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416\" Fisa-vim-config\" http://fisadev.github.io/fisa-vim-config/\" version: 8.2\" ============================================================================\" Vim-plug initialization\" Avoid modify this section, unless you are very sure of what you are doinglet vim_plug_just_installed = 0let vim_plug_path = expand('~/.vim/autoload/plug.vim')if !filereadable(vim_plug_path) echo \"Installing Vim-plug...\" echo \"\" silent !mkdir -p ~/.vim/autoload silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim let vim_plug_just_installed = 1endif\" manually load vim-plug the first timeif vim_plug_just_installed :execute 'source '.fnameescape(vim_plug_path)endif\" Obscure hacks done, you can now modify the rest of the .vimrc as you wish :)\" ============================================================================\" Active plugins\" You can disable or add new ones here:\" this needs to be here, so vim-plug knows we are declaring the plugins we\" want to usecall plug#begin('~/.vim/plugged')\" Plugins from github repos:\" Override configs by directoryPlug 'arielrossanigo/dir-configs-override.vim'\" Better file browserPlug 'scrooloose/nerdtree'\" Code commenterPlug 'scrooloose/nerdcommenter'\" Class/module browserPlug 'majutsushi/tagbar'\" Code and files fuzzy finderPlug 'ctrlpvim/ctrlp.vim'\" Extension to ctrlp, for fuzzy command finderPlug 'fisadev/vim-ctrlp-cmdpalette'\" Zen codingPlug 'mattn/emmet-vim'\" Git integrationPlug 'motemen/git-vim'\" Tab list panelPlug 'kien/tabman.vim'\" AirlinePlug 'vim-airline/vim-airline'Plug 'vim-airline/vim-airline-themes'\" Terminal Vim with 256 colors colorschemePlug 'fisadev/fisa-vim-colorscheme'\" Consoles as buffersPlug 'rosenfeld/conque-term'\" Pending tasks listPlug 'fisadev/FixedTaskList.vim'\" SurroundPlug 'tpope/vim-surround'\" AutoclosePlug 'Townk/vim-autoclose'\" Indent text objectPlug 'michaeljsmith/vim-indent-object'\" Indentation based movementsPlug 'jeetsukumaran/vim-indentwise'\" Python mode (indentation, doc, refactor, lints, code checking, motion and\" operators, highlighting, run and ipdb breakpoints)Plug 'klen/python-mode'\" Better autocompletionPlug 'Shougo/neocomplcache.vim'\" Snippets manager (SnipMate), dependencies, and snippets repoPlug 'MarcWeber/vim-addon-mw-utils'Plug 'tomtom/tlib_vim'Plug 'honza/vim-snippets'Plug 'garbas/vim-snipmate'\" Git/mercurial/others diff icons on the side of the file linesPlug 'mhinz/vim-signify'\" Automatically sort python importsPlug 'fisadev/vim-isort'\" Drag visual blocks arroundPlug 'fisadev/dragvisuals.vim'\" Window chooserPlug 't9md/vim-choosewin'\" Python and other languages code checkerPlug 'scrooloose/syntastic'\" Paint css colors with the real colorPlug 'lilydjwg/colorizer'\" Ack code search (requires ack installed in the system)Plug 'mileszs/ack.vim'if has('python') \" YAPF formatter for Python Plug 'pignacio/vim-yapf-format'endif\" Relative numbering of lines (0 is the current line)\" (disabled by default because is very intrusive and can't be easily toggled\" on/off. When the plugin is present, will always activate the relative\" numbering every time you go to normal mode. Author refuses to add a setting\" to avoid that)\" Plug 'myusuf3/numbers.vim'\" Plugins from vim-scripts repos:\" Search results counterPlug 'IndexedSearch'\" XML/HTML tags navigationPlug 'matchit.zip'\" Gvim colorschemePlug 'Wombat'\" Yank history navigationPlug 'YankRing.vim'\" Tell vim-plug we finished declaring plugins, so it can load themcall plug#end()\" ============================================================================\" Install plugins the first time vim runsif vim_plug_just_installed echo \"Installing Bundles, please ignore key map error messages\" :PlugInstallendif\" ============================================================================\" Vim settings and mappings\" You can edit them as you wish\" no vi-compatibleset nocompatible\" allow plugins by file type (required for plugins!)filetype plugin onfiletype indent on\" tabs and spaces handlingset expandtabset tabstop=4set softtabstop=4set shiftwidth=4\" tab length exceptions on some file typesautocmd FileType html setlocal shiftwidth=4 tabstop=4 softtabstop=4autocmd FileType htmldjango setlocal shiftwidth=4 tabstop=4 softtabstop=4autocmd FileType javascript setlocal shiftwidth=4 tabstop=4 softtabstop=4\" always show status barset ls=2\" incremental searchset incsearch\" highlighted search resultsset hlsearch\" syntax highlight onsyntax on\" show line numbersset nu\" tab navigation mappingsmap tn :tabn&lt;CR&gt;map tp :tabp&lt;CR&gt;map tm :tabmmap tt :tabnewmap ts :tab split&lt;CR&gt;map &lt;C-S-Right&gt; :tabn&lt;CR&gt;imap &lt;C-S-Right&gt; &lt;ESC&gt;:tabn&lt;CR&gt;map &lt;C-S-Left&gt; :tabp&lt;CR&gt;imap &lt;C-S-Left&gt; &lt;ESC&gt;:tabp&lt;CR&gt;\" navigate windows with meta+arrowsmap &lt;M-Right&gt; &lt;c-w&gt;lmap &lt;M-Left&gt; &lt;c-w&gt;hmap &lt;M-Up&gt; &lt;c-w&gt;kmap &lt;M-Down&gt; &lt;c-w&gt;jimap &lt;M-Right&gt; &lt;ESC&gt;&lt;c-w&gt;limap &lt;M-Left&gt; &lt;ESC&gt;&lt;c-w&gt;himap &lt;M-Up&gt; &lt;ESC&gt;&lt;c-w&gt;kimap &lt;M-Down&gt; &lt;ESC&gt;&lt;c-w&gt;j\" old autocomplete keyboard shortcutimap &lt;C-J&gt; &lt;C-X&gt;&lt;C-O&gt;\" Comment this line to enable autocompletion preview window\" (displays documentation related to the selected completion option)\" Disabled by default because preview makes the window flickerset completeopt-=preview\" save as sudoca w!! w !sudo tee \"%\"\" simple recursive grepnmap ,r :Acknmap ,wr :Ack &lt;cword&gt;&lt;CR&gt;\" use 256 colors when possibleif (&amp;term =~? 'mlterm\\|xterm\\|xterm-256\\|screen-256') || has('nvim') let &amp;t_Co = 256\" colorscheme fisa colorscheme delekelse colorscheme delekendif\" colors for gvimif has('gui_running') colorscheme wombatendif\" when scrolling, keep cursor 3 lines away from screen borderset scrolloff=3\" autocompletion of files and commands behaves like shell\" (complete only the common part, list the options that match)set wildmode=list:longest\" better backup, swap and undos storageset directory=~/.vim/dirs/tmp \" directory to place swap files inset backup \" make backup filesset backupdir=~/.vim/dirs/backups \" where to put backup filesset undofile \" persistent undos - undo after you re-open the fileset undodir=~/.vim/dirs/undosset viminfo+=n~/.vim/dirs/viminfo\" store yankring history file there toolet g:yankring_history_dir = '~/.vim/dirs/'\" create needed directories if they don't existif !isdirectory(&amp;backupdir) call mkdir(&amp;backupdir, \"p\")endifif !isdirectory(&amp;directory) call mkdir(&amp;directory, \"p\")endifif !isdirectory(&amp;undodir) call mkdir(&amp;undodir, \"p\")endif\" ============================================================================\" Plugins settings and mappings\" Edit them as you wish.\" Tagbar -----------------------------\" toggle tagbar displaymap &lt;F4&gt; :TagbarToggle&lt;CR&gt;\" autofocus on tagbar openlet g:tagbar_autofocus = 1\" NERDTree -----------------------------\" toggle nerdtree displaymap &lt;F3&gt; :NERDTreeToggle&lt;CR&gt;\" open nerdtree with the current file selectednmap ,t :NERDTreeFind&lt;CR&gt;\" don;t show these file typeslet NERDTreeIgnore = ['\\.pyc$', '\\.pyo$']\" Tasklist ------------------------------\" show pending tasks listmap &lt;F2&gt; :TaskList&lt;CR&gt;\" CtrlP ------------------------------\" file finder mappinglet g:ctrlp_map = ',e'\" tags (symbols) in current file finder mappingnmap ,g :CtrlPBufTag&lt;CR&gt;\" tags (symbols) in all files finder mappingnmap ,G :CtrlPBufTagAll&lt;CR&gt;\" general code finder in all files mappingnmap ,f :CtrlPLine&lt;CR&gt;\" recent files finder mappingnmap ,m :CtrlPMRUFiles&lt;CR&gt;\" commands finder mappingnmap ,c :CtrlPCmdPalette&lt;CR&gt;\" to be able to call CtrlP with default search textfunction! CtrlPWithSearchText(search_text, ctrlp_command_end) execute ':CtrlP' . a:ctrlp_command_end call feedkeys(a:search_text)endfunction\" same as previous mappings, but calling with current word as default textnmap ,wg :call CtrlPWithSearchText(expand('&lt;cword&gt;'), 'BufTag')&lt;CR&gt;nmap ,wG :call CtrlPWithSearchText(expand('&lt;cword&gt;'), 'BufTagAll')&lt;CR&gt;nmap ,wf :call CtrlPWithSearchText(expand('&lt;cword&gt;'), 'Line')&lt;CR&gt;nmap ,we :call CtrlPWithSearchText(expand('&lt;cword&gt;'), '')&lt;CR&gt;nmap ,pe :call CtrlPWithSearchText(expand('&lt;cfile&gt;'), '')&lt;CR&gt;nmap ,wm :call CtrlPWithSearchText(expand('&lt;cword&gt;'), 'MRUFiles')&lt;CR&gt;nmap ,wc :call CtrlPWithSearchText(expand('&lt;cword&gt;'), 'CmdPalette')&lt;CR&gt;\" don't change working directorylet g:ctrlp_working_path_mode = 0\" ignore these files and folders on file finderlet g:ctrlp_custom_ignore = &#123; \\ 'dir': '\\v[\\/](\\.git|\\.hg|\\.svn|node_modules)$', \\ 'file': '\\.pyc$\\|\\.pyo$', \\ &#125;\" Syntastic ------------------------------\" show list of errors and warnings on the current filenmap &lt;leader&gt;e :Errors&lt;CR&gt;\" check also when just opened the filelet g:syntastic_check_on_open = 0\" don't put icons on the sign column (it hides the vcs status icons of signify)let g:syntastic_enable_signs = 0\" custom icons (enable them if you use a patched font, and enable the previous\" setting)\"let g:syntastic_error_symbol = '✗'\"let g:syntastic_warning_symbol = '⚠'\"let g:syntastic_style_error_symbol = '✗'\"let g:syntastic_style_warning_symbol = '⚠'\" Python-mode ------------------------------\" don't use linter, we use syntastic for thatlet g:pymode_lint_on_write = 0let g:pymode_lint_signs = 0\" don't fold python code on openlet g:pymode_folding = 0\" don't load rope by default. Change to 1 to use ropelet g:pymode_rope = 0\" open definitions on same window, and custom mappings for definitions and\" occurrenceslet g:pymode_rope_goto_definition_bind = ',d'let g:pymode_rope_goto_definition_cmd = 'e'nmap ,D :tab split&lt;CR&gt;:PymodePython rope.goto()&lt;CR&gt;nmap ,o :RopeFindOccurrences&lt;CR&gt;\" NeoComplCache ------------------------------\" most of them not documented because I'm not sure how they work\" (docs aren't good, had to do a lot of trial and error to make\" it play nice)let g:neocomplcache_enable_at_startup = 1let g:neocomplcache_enable_ignore_case = 1let g:neocomplcache_enable_smart_case = 1let g:neocomplcache_enable_auto_select = 1let g:neocomplcache_enable_fuzzy_completion = 1let g:neocomplcache_enable_camel_case_completion = 1let g:neocomplcache_enable_underbar_completion = 1let g:neocomplcache_fuzzy_completion_start_length = 1let g:neocomplcache_auto_completion_start_length = 1let g:neocomplcache_manual_completion_start_length = 1let g:neocomplcache_min_keyword_length = 1let g:neocomplcache_min_syntax_length = 1\" complete with workds from any opened filelet g:neocomplcache_same_filetype_lists = &#123;&#125;let g:neocomplcache_same_filetype_lists._ = '_'\" TabMan ------------------------------\" mappings to toggle display, and to focus on itlet g:tabman_toggle = 'tl'let g:tabman_focus = 'tf'\" Autoclose ------------------------------\" Fix to let ESC work as espected with Autoclose pluginlet g:AutoClosePumvisible = &#123;\"ENTER\": \"\\&lt;C-Y&gt;\", \"ESC\": \"\\&lt;ESC&gt;\"&#125;\" DragVisuals ------------------------------\" mappings to move blocks in 4 directionsvmap &lt;expr&gt; &lt;S-M-LEFT&gt; DVB_Drag('left')vmap &lt;expr&gt; &lt;S-M-RIGHT&gt; DVB_Drag('right')vmap &lt;expr&gt; &lt;S-M-DOWN&gt; DVB_Drag('down')vmap &lt;expr&gt; &lt;S-M-UP&gt; DVB_Drag('up')\" mapping to duplicate blockvmap &lt;expr&gt; D DVB_Duplicate()\" Signify ------------------------------\" this first setting decides in which order try to guess your current vcs\" UPDATE it to reflect your preferences, it will speed up opening fileslet g:signify_vcs_list = [ 'git', 'hg' ]\" mappings to jump to changed blocksnmap &lt;leader&gt;sn &lt;plug&gt;(signify-next-hunk)nmap &lt;leader&gt;sp &lt;plug&gt;(signify-prev-hunk)\" nicer colorshighlight DiffAdd cterm=bold ctermbg=none ctermfg=119highlight DiffDelete cterm=bold ctermbg=none ctermfg=167highlight DiffChange cterm=bold ctermbg=none ctermfg=227highlight SignifySignAdd cterm=bold ctermbg=237 ctermfg=119highlight SignifySignDelete cterm=bold ctermbg=237 ctermfg=167highlight SignifySignChange cterm=bold ctermbg=237 ctermfg=227\" Window Chooser ------------------------------\" mappingnmap - &lt;Plug&gt;(choosewin)\" show big letterslet g:choosewin_overlay_enable = 1\" Airline ------------------------------let g:airline_powerline_fonts = 0let g:airline_theme = 'bubblegum'let g:airline#extensions#whitespace#enabled = 0\" to use fancy symbols for airline, uncomment the following lines and use a\" patched font (more info on the README.rst)\"if !exists('g:airline_symbols')\" let g:airline_symbols = &#123;&#125;\"endif\"let g:airline_left_sep = '⮀'\"let g:airline_left_alt_sep = '⮁'\"let g:airline_right_sep = '⮂'\"let g:airline_right_alt_sep = '⮃'\"let g:airline_symbols.branch = '⭠'\"let g:airline_symbols.readonly = '⭤'\"let g:airline_symbols.linenr = '⭡' 安装vim插件12$ vim +BundleClean +BundleInstall! +qa$ chown $USER ~/.vim/ zsh安装zsh 1$ yum install -y zsh.x86_64 配置zsh1$ sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" tmux安装tmux 1$ yum install tmux.x86_64 .tmux.conf1234567891011121314151617181920212223242526272829303132333435363738394041424344unbind C-bset -g prefix `bind-key ` send-keys `setw -g mode-keys vibind-key k select-pane -Ubind-key j select-pane -Dbind-key h select-pane -Lbind-key l select-pane -Rbind-key K resize-pane -U 5bind-key J resize-pane -D 5bind-key H resize-pane -L 10bind-key L resize-pane -R 10bind-key - splitw -v -c '#&#123;pane_current_path&#125;'bind-key \\ splitw -h -c '#&#123;pane_current_path&#125;'set -g default-terminal \"screen-256color\"set -g status-bg blackset -g status-fg greensetw -g window-status-current-attr brightset -g pane-active-border-fg cyanset -g pane-border-fg greenset -g base-index 1setw -g pane-base-index 1set -g status-interval 1set-option -g automatic-rename onset-option -g status-justify centreset-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'set-option -g status-left-length 30set-option -g status-right '#[fg=green][#[fg=cyan]%H:%M:%S#[fg=green]]'setw -g monitor-activity onset-window-option -g mode-keys vibind r source-file ~/.tmux.conf \\; display \"Configuration Reload\" ansible非常好用的集群管理工具，详情参考另一篇博文《Ansible 学习之路》 cd /etc/yum.repos.dwget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo 解决phpvirtualbox Error logging in to vboxwebsrvVBoxManage setproperty vrdeauthlibrary “VBoxAuthSimple” /etc/vbox/vbox.cfg VBOXWEB_HOST=0.0.0.0VBOXWEB_PORT=18083 VBOXWEB_LOGFILEVBOXWEB_LOGSIZEVBOXWEB_LOGINTERVAL","categories":[],"tags":[{"name":"架构","slug":"架构","permalink":"http://dragon-lab.github.io/tags/架构/"},{"name":"运维","slug":"运维","permalink":"http://dragon-lab.github.io/tags/运维/"}]},{"title":"IM服务器架构的一些经验","slug":"IM-Server-Architecture","date":"2017-02-04T09:15:25.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/04/IM-Server-Architecture/","link":"","permalink":"http://dragon-lab.github.io/2017/02/04/IM-Server-Architecture/","excerpt":"","text":"","categories":[],"tags":[{"name":"架构","slug":"架构","permalink":"http://dragon-lab.github.io/tags/架构/"}]},{"title":"Mysql数据库优化的一些思路","slug":"Mysql-Database-Optimization","date":"2017-02-04T09:14:39.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/04/Mysql-Database-Optimization/","link":"","permalink":"http://dragon-lab.github.io/2017/02/04/Mysql-Database-Optimization/","excerpt":"","text":"","categories":[],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://dragon-lab.github.io/tags/数据库/"}]},{"title":"Tensorflow 学习之路","slug":"Learning-Tensorflow","date":"2017-02-04T02:47:11.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/04/Learning-Tensorflow/","link":"","permalink":"http://dragon-lab.github.io/2017/02/04/Learning-Tensorflow/","excerpt":"","text":"Tensorflow 示例收集了一些Tensorflow可以做的一些有意思的事情： 图像风格转换,生成各种有意思的图 https://github.com/anishathalye/neural-style https://github.com/fzliu/style-transfer 给素描黑白画，自动上色https://github.com/pfnet/PaintsChainer 生成古诗词：基于RNN生成古诗词http://blog.topspeedsnail.com/archives/10542 结合RL玩游戏的，愤怒的小鸟，超级马里奥https://github.com/yenchenlin/DeepLearningFlappyBird 用TensorFlow实现MarioKart游戏自动驾驶https://github.com/kevinhughes27/TensorKart Udacity自驾模拟项目Nanodegreehttps://github.com/upul/behavioral_cloning Tensorflow 资料 Tensorflow从入门到精通https://github.com/aymericdamien/TensorFlow-Examples Tensorflow 安装源代码安装获取源代码1$ git clone https://github.com/tensorflow/tensorflow 准备安装环境在Mac上安装bazel，建议使用homebrew安装依赖 1$ brew install bazel 可以使用easy_install或pip安装python依赖，如果使用easy_install运行下面的命令:123$ sudo easy_install -U six$ sudo easy_install -U numpy$ sudo easy_install wheel 推荐使用ipython，运行下面的命令安装：1$ sudo easy_install ipython 配置安装1234567891011121314151617181920212223$ ./configurePlease specify the location of python. [Default is /usr/local/bin/python]:Please specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:Do you wish to build TensorFlow with Google Cloud Platform support? [y/N]No Google Cloud Platform support will be enabled for TensorFlowDo you wish to build TensorFlow with Hadoop File System support? [y/N]No Hadoop File System support will be enabled for TensorFlowDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N]No XLA support will be enabled for TensorFlowFound possible Python library paths: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages /Library/Python/2.7/site-packagesPlease input the desired Python library path to use. Default is [/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages]Using python library path: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packagesDo you wish to build TensorFlow with OpenCL support? [y/N]No OpenCL support will be enabled for TensorFlowDo you wish to build TensorFlow with CUDA support? [y/N]No CUDA support will be enabled for TensorFlowConfiguration finishedINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes...........INFO: All external dependencies fetched successfully. 编译安装123456$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg# The name of the .whl file will depend on your platform.$ pip install /tmp/tensorflow_pkg/tensorflow-0.12.1-cp27-cp27m-macosx_10_11_x86_64.whl 测试12345678910&gt;&gt;&gt; import tensorflow as tf&gt;&gt;&gt; hello = tf.constant('Hello, TensorFlow!')&gt;&gt;&gt; sess = tf.Session()&gt;&gt;&gt; sess.run(hello)Hello, TensorFlow!&gt;&gt;&gt; a = tf.constant(10)&gt;&gt;&gt; b = tf.constant(32)&gt;&gt;&gt; sess.run(a+b)42&gt;&gt;&gt; Tensorflow 体验neural-style下载源代码123$ git clone https://github.com/anishathalye/neural-style.git$ cd neural-style 下载训练集1curl -O http://www.vlfeat.org/matconvnet/models/beta16/imagenet-vgg-verydeep-19.mat 安装Python依赖123$ pip install numpy$ pip install scipy$ pip install pillow 运行应用1$ python neural_style.py --content examples/1-content.jpg --styles examples/1-style.jpg --output output.jpg --iterations 1000 运行太慢的话，可以考虑缩小图片大小，或者升级机器配置。 查看结果 原图 样式图 结果图","categories":[],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://dragon-lab.github.io/tags/机器学习/"}]},{"title":"软件架构模式","slug":"software-architecture","date":"2017-02-03T04:19:03.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/03/software-architecture/","link":"","permalink":"http://dragon-lab.github.io/2017/02/03/software-architecture/","excerpt":"","text":"软件架构模式 分层架构事件驱动架构微内核架构OSGI 微服务架构云平台架构集成开发平台架构","categories":[],"tags":[{"name":"架构","slug":"架构","permalink":"http://dragon-lab.github.io/tags/架构/"}]},{"title":"Linux系统开发学习","slug":"Unix-Development","date":"2017-02-03T03:51:48.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/03/Unix-Development/","link":"","permalink":"http://dragon-lab.github.io/2017/02/03/Unix-Development/","excerpt":"","text":"环境搭建centos 7 下安装开发环境，运行下面的命令 1$ yum groupinstall -y \"Development Tools\" 工具学习GDB编译程序加上-g选项，这样编译出的可执行程序中包含调试信息，否则之后GDB无法载入可执行文件中对应的代码信息。 1$ gcc -g test.c -o test 启动gdb进行调试 123456789101112$ gdb testGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-94.el7Copyright (C) 2013 Free Software Foundation, Inc.License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law. Type \"show copying\"and \"show warranty\" for details.This GDB was configured as \"x86_64-redhat-linux-gnu\".For bug reporting instructions, please see:&lt;http://www.gnu.org/software/gdb/bugs/&gt;...Reading symbols from /root/chapter03/test...done.(gdb) 查看文件 1(Gdb) l 设置断点 12(gdb) b 6Breakpoint 1 at 0x400585: file test.c, line 6. 需要注意的时，代码并没有运行第6行，而是在运行第6行之前就停止了。 查看断点情况 123(gdb) info bNum Type Disp Enb Address What1 breakpoint keep y 0x0000000000400585 in main at test.c:6 运行代码 123456(gdb) rStarting program: /root/chapter03/testBreakpoint 1, main () at test.c:66 int i, n = 0;Missing separate debuginfos , use: debuginfo-install glibc-2.17-157.el7_3.1.x86_64 查看变量值 12(gdb) p n$1 = 0 单步运行 12(gdb) n8 ret = sum(50); 恢复程序运行 12345(gdb) cContinuing.The sum of 1-m is 50The sum of 1-50 is 50[Inferior 1 (process 21754) exited normally] 程序在运行完后退出，之后程序处于“停止状态” Makefile链接库在创建函数库之前，先准备下示例代码 hello.h1void hello(const char *name); hello.c12345#include &lt;stdio.h&gt;void hello(const char *name) &#123; printf(\"Hello %s!\\n\", name);&#125; main.c123456#include \"hello.h\"int main() &#123; hello(\"everyone\"); return 0;&#125; 将hello.c编译成hello.o 1234$ gcc -c hello.c$ lshello.c hello.h hello.o main.c 静态库由hello.o创建静态库 静态库的命名规范是以lib为前缀，紧接着跟静态库名，扩展名为.a。例如，将创建的静态库名为myhello，则静态库文件名就是libmyhello.a。 使用ar命令创建静态库 1234$ ar crv libmyhello.a hello.o$ lshello.c hello.h hello.o libmyhello.a main.c 在程序中使用静态库时，需要引入源程序中包含的公共函数。例如在main.c中#include &quot;hello.h&quot;。 注意：gcc会在静态库名前加上前缀lib，然后用追加扩展名.a，得到的静态库文件名来查找静态文件。 12345678910111213$ gcc -o hello main.c -L. -lmyhello$ lshello hello.c hello.h hello.o libmyhello.a main.c$ ./helloHello everyone$ gcc main.c libmyhello.a -o mainhello hello.c hello.h hello.o libmyhello.a main main.c$ ./mainHello everyone 删除静态库文件测试公共函数hello是否真的连接到目标文件hello中了 1234567$ rm libmyhello.a$ lshello hello.c hello.h hello.o main main.c$ ./helloHello everyone 程序正常运行，可见静态库中使用的函数已经连接到目标文件中了。 动态库在创建动态链接库之前把前面生成的文件先删除掉，避免混淆。 12$ lshello.c hello.h main.c 动态库文件名命名规范和静态库文件名命名规范累死，也是在动态库名增加前缀lib，但其文件扩展名为.so。例如将创建的动态库名为myhello，则动态库文件名就是libmyhello.so。 使用gcc创建动态库，输入一下命令 1234$ gcc hello.c -shared -fPIC -o libmyhello.so$ lshello.c hello.h hello.o libmyhello.so main.c 在程序中使用动态库，使用下面的命令进行编译 1234$ gcc -o hello main.c -L. -lmyhello$ ./hello./hello: error while loading shared libraries: libmyhello.so: cannot open shared object file: No such file or directory 程序运行出错，提示找不到libmyhello.so。程序运行时，会在 /usr/lib 和 /lib 等目录中查找需要的动态库文件。 若找到则载入动态库，否则提示类似上述错误而终止程序运行。 将文件 libmyhello.so 复制到目录 /usr/lib 中再试试。 1234567$ cp libmyhello.so /usr/lib# 如果是x64系统则复制到 /usr/lib64 下$ cp libmyhello.so /usr/lib64$ ./helloHello everyone 程序运行成功，说明了动态库在程序运行时是需要的。 当静态库和动态库同时存在时，程序优先使用动态库。 内存管理mallocFrom system ptmallocFrom glibc tcmallocFrom Google jemallocFrom Google 文件I/O线程进程管道信号网络","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://dragon-lab.github.io/tags/Linux/"}]},{"title":"集成开发平台架构","slug":"Base-Architecture","date":"2017-02-03T02:47:34.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/03/Base-Architecture/","link":"","permalink":"http://dragon-lab.github.io/2017/02/03/Base-Architecture/","excerpt":"","text":"需求存储篇GlusterfsCeph集群运维篇DockerKubernetesOpenshiftHelm负载均衡篇Nginx IngressRancher Ingresshttps://github.com/rancher/lb-controller 日志收集篇系统监控篇Netsil持续集成篇Fabric8Apache Camel","categories":[],"tags":[{"name":"架构","slug":"架构","permalink":"http://dragon-lab.github.io/tags/架构/"}]},{"title":"组建自己的工作站","slug":"Workstation","date":"2017-02-03T02:38:12.000Z","updated":"2018-05-04T04:34:39.000Z","comments":true,"path":"2017/02/03/Workstation/","link":"","permalink":"http://dragon-lab.github.io/2017/02/03/Workstation/","excerpt":"","text":"苹果的Macbook Pro的8g内存（2016年发布会也没有推出32g版）运行一些需要集群环境的程序比较吃力，例如Spark、Openshift、Fabric8。调研了下配置较高的云服务器价格又略贵，所以萌生了自己组装一台工作站的想法。 需求 内存64g，且易于扩展 CPU 核心多，可以跑虚拟机模拟集群环境。 可以黑苹果，个人比较习惯Mac系统 PCI-E x16 接口丰富 硬件环境 项目 名称 CPU Xeon E5 2683 v3 * 2 主板 Intel S2600CW2R 内存 三星 DDR4 ECC 32g * 2 显卡 Asus R9 270 网卡 TP-LINK TL-WDN4800 电源 海韵（Seasonic）额定620W M12II-620 电源 机箱 银欣乌鸦3 散热器 九州风神大霜塔 * 2 键盘 HHKB PRO2 硬盘 SSD 128g + 4TB 黑盘 电源 CPU 内存 主板 显卡机箱 散热器 键盘 HHKB-Pro2 HHKB没有实体方向键，在VIM下没有什么影响，在Mac下也有一些快捷键可以代替方向键，总之习惯后非常好用。 快捷键 说明 Ctrl+p shell中上一个命令,或者 文本中移动到上一行 Ctrl+n shell中下一个命令,或者 文本中移动到下一行 Ctrl+r 往后搜索历史命令 Ctrl+s 往前搜索历史命令 Ctrl+f 光标前移 Ctrl+b 光标后退 Ctrl+a 到行首 Ctrl+e 到行尾 Ctrl+d 删除一个字符,删除一个字符，相当于通常的Delete键 Ctrl+h 退格删除一个字符,相当于通常的Backspace键 Ctrl+u 删除到行首 Ctrl+k 删除到行尾 Ctrl+l 类似 clear 命令效果 macos sierra这里需要说明的是黑苹果安装是不被苹果允许的 下载基础工具 从App Store中下载macos sierra Download-macos 下载Unibeast，用于制作U盘镜像。 下载MultiBeast-Sierra-Edition 制作USB启动工具 格式化USB设备（U盘） 使用Unibeast制作U盘镜像 如果主板支持UEFI引导，则选择第一个，不支持则选择第二个。 选择显卡驱动 这个地方很慢，要耐心等.. BIOS设置 载入Optimized Defaults设置 打开AHCI选项，不然安装过程中可能识别不了硬盘 如果CPU支持VT-d，禁用掉 保存并且退出 安装macos sierra正常的macos安装过程，没有特别的异常，不多做说明 MultiBeast设置引导 勾选好需要的驱动程直接点击安装就好了， 整个过程比较顺利 常见问题和优化 安装后使用App Store安装，出现无法验证您的设备或电脑，请联系技术支持寻求帮助。 待解决","categories":[],"tags":[]}]}